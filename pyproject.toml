[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
address_validator = ["*.json"]

[tool.setuptools]
package-dir = { "" = "src" }
packages = { find = { where = ["src"] } }

[project]
name = "address_validator"
authors = [{ name = "Leow Yuan Yeow", email = "yuanyeow.github@gmail.com" }]
description = "Singapore Address Validator"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
classifiers = ["Programming Language :: Python :: 3"]
dynamic = ["version"]
dependencies = [
    "bs4>=0.0.2",
    "fastapi>=0.115.12",
    "httpx>=0.28.1",
    "nicegui>=2.19.0",
    "tenacity>=9.1.2",
    "uvicorn>=0.34.3",
]

[project.optional-dependencies]
release = ["build"]
dev = [
    "address_validator[release]",
    "pytest>=8.4.0",
    "pytest-cov",
    "pre-commit",
    "pandas",
]

# docs: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
[tool.setuptools.dynamic]
version = { file = "version.txt" }

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.mypy]
disable_error_code = ["import-untyped"]

[tool.ruff]
exclude = ["venv"]
line-length = 119

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
extend-select = ["I"]
ignore = [
    "E501", # ignore "line too long" (PEP8 says 79/120 chars)
    # "F401", # Ignore "imported but unused" warnings.
    "D107", # ignore "Missing docstring in __init__".
    "D212", # ignore specific docstring formatting issue (first line should be on the same line as opening quotes).
    # "D203", # ignore "1 blank line required before class docstring".
    "D205", # 1 blank line required between summary line and description
    # "D100", # ignore "Missing module-level docstring".
    "W605", # ignore "invalid escape sequences" in strings (e.g., \d without raw string).
]
select = ["E", "F", "B", "ERA", "D"]
unfixable = ["B"]

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "D100", "D104"]
"path/to/file.py" = ["E402"]


# [tool.black]
# line-length = 119
# exclude = "venv"

# [tool.flake8]
# docstring-convention = "all"
# ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100", "D417"]
# exclude = ["venv"]
# max-line-length = 119


# [tool.isort]
# profile = "black"
# multi_line_output = "VERTICAL_HANGING_INDENT"
# force_grid_wrap = 2
# line_length = 119

# [tool.pylint."messages control"]
# disable = [
#     "line-too-long",
#     "trailing-whitespace",
#     "missing-function-docstring",
#     "consider-using-f-string",
#     "import-error",
#     "too-few-public-methods",
#     "redefined-outer-name",
#     "R0913",                        # Too many arguments
#     "R0917",                        # Too many positional argument
#     "too-many-instance-attributes",
# ]
