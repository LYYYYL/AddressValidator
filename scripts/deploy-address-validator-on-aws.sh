#!/usr/bin/env bash
set -euo pipefail

# â”€â”€ log everything to a file + stdout â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
exec > >(tee -a /tmp/deploy.log | logger -t deploy-script) 2>&1
set -x      # bash prints every command as it runs

S3_BUCKET_NAME="$1"

aws s3 cp "s3://${S3_BUCKET_NAME}/latest-image.txt" /tmp/image_name.txt
IMAGE="$(< /tmp/image_name.txt)"

echo "âœ… Will deploy image: $IMAGE"
echo "ðŸ•‘ Current address-validator image (if running):"
docker inspect address-validator --format '{{.Config.Image}}' 2>/dev/null || echo "  (container not running)"

echo "ðŸ”„  docker pull $IMAGE"
docker pull "$IMAGE"

echo "ðŸ›‘  Stopping existing container (if any)â€¦"
docker stop address-validator || true
docker rm   address-validator || true

echo "ðŸš€  Starting new container with: $IMAGE"
docker run -d -p 8000:8000 --restart unless-stopped --name address-validator "$IMAGE"

echo "ðŸ“„  New container image:"
docker inspect address-validator --format '{{.Config.Image}}'
echo "âœ… Deploy complete"
